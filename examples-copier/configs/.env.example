# Sample .env for the Docs Examples Copier
# Required identifiers for the GitHub App installation
GITHUB_APP_ID="<GitHub App ID (numeric)>"
INSTALLATION_ID="<GitHub App Installation ID>"
# Optional (not used for JWT auth): OAuth client ID of your GitHub App
# GITHUB_APP_CLIENT_ID="<GitHub App Client ID (starts with Iv)>"

# Source repository (where config.json and deprecated_examples.json live)
REPO_OWNER="mongodb"
REPO_NAME="docs-code-examples"
SRC_BRANCH="main"

# Author information for commits to the source repo
COMMITER_NAME="Copier Bot"
COMMITER_EMAIL="bot@example.com"

# Web server configuration
PORT="8080"               # omit or empty to use default 8080
WEBSERVER_PATH="/webhook" # webhook route path

# File names/paths in the source repo
CONFIG_FILE="config.json"
DEPRECATION_FILE="deprecated_examples.json"

# Logging / GCP (optional)
GOOGLE_CLOUD_PROJECT_ID="github-copy-code-examples"
COPIER_LOG_NAME="copy-copier-log"
# Disable GCP logging in local/dev if desired (string boolean)
# COPIER_DISABLE_CLOUD_LOGGING="true"
# Enable debug logging either by LOG_LEVEL=debug or COPIER_DEBUG=true
# LOG_LEVEL="debug"
# COPIER_DEBUG="true"

# Authentication: Secret Manager vs local
# If running locally/tests, you can skip GCP Secret Manager and provide the key via env
# SKIP_SECRET_MANAGER="true"
# GITHUB_APP_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n"
# or base64-encoded:
# GITHUB_APP_PRIVATE_KEY_B64="<base64-encoded-PEM>"
# Otherwise, when using GCP Secret Manager, set the fully-qualified secret name:
# PEM_NAME="projects/1234567890/secrets/CODE_COPIER_PEM/versions/latest"

# BEHAVIOR DEFAULTS
# Global default commit message if not set at config level
DEFAULT_COMMIT_MESSAGE="Automatic copy of updated code examples"
# Default copy behavior if not set at config level (string booleans: "true" or "false")
# If "true", all files in source repo are recursively copied from path, otherwise only the top-level examples.
DEFAULT_RECURSIVE_COPY="true"
# Default write strategy if not set at config level: "direct" (commit directly) or "pr" (PR created)
# If "pr", the DEFAULT_PR_MERGE setting applies.
COPIER_COMMIT_STRATEGY="pr"
# When COPIER_COMMIT_STRATEGY is set to "pr", default PR merge behavior if not set at config level (string booleans: "true" or "false")
# If "true", PRs merge automatically if no conflicts, otherwise PR created but not merged.
DEFAULT_PR_MERGE="false"