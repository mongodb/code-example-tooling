# Local Development Environment Configuration

# To use this file, copy it to .env and edit with your values:
#   cp configs/.env.local configs/.env
#   source configs/.env
#   ./examples-copier

# Or use with make:
#   make run-dry

# Or run directly:
#   COPIER_DISABLE_CLOUD_LOGGING=true DRY_RUN=true ./examples-copier

# ============================================================================
# REQUIRED FOR LOCAL TESTING
# ============================================================================

# Source Repository Configuration (Required)
REPO_NAME="<source-repo-name>"
REPO_OWNER="<github-username-or-org>"
# Source Branch (Optional - default: main)
SRC_BRANCH="test"

# Configuration Files
CONFIG_FILE=copier-config.yaml
DEPRECATION_FILE=deprecated_examples.json

# ============================================================================
# DISABLE CLOUD SERVICES FOR LOCAL TESTING
# ============================================================================

# Disable Google Cloud Logging (use stdout instead)
COPIER_DISABLE_CLOUD_LOGGING=true

# Disable Audit Logging (or use local MongoDB)
AUDIT_ENABLED=false

# ============================================================================
# DEVELOPMENT FEATURES
# ============================================================================

# Dry-run mode (no actual commits)
DRY_RUN=true

# Enable debug logging
LOG_LEVEL=debug
COPIER_DEBUG=true

# Enable metrics endpoint
METRICS_ENABLED=true

# Server port
PORT=8080

# ============================================================================
# GITHUB CREDENTIALS (REQUIRED FOR REAL PR TESTING)
# ============================================================================

# GitHub App ID (get from GitHub App settings)
# GITHUB_APP_ID=123456

# GitHub Installation ID (get from GitHub App installation)
# GITHUB_INSTALLATION_ID=789012

# For local testing, you can use a Personal Access Token instead
# Get from: https://github.com/settings/tokens
# Required scopes: repo (for reading PRs and files)
GITHUB_TOKEN=

# ============================================================================
# OPTIONAL: GOOGLE CLOUD (ONLY IF TESTING CLOUD FEATURES)
# ============================================================================

# Only set these if you want to test with actual GCP
# GCP_PROJECT_ID=your-project-id
# PEM_KEY_NAME=projects/123/secrets/CODE_COPIER_PEM/versions/latest

# ============================================================================
# OPTIONAL: MONGODB AUDIT LOGGING (FOR LOCAL TESTING)
# ============================================================================

# Uncomment to enable audit logging with local/cloud MongoDB
# AUDIT_ENABLED=true
# MONGO_URI=mongodb://localhost:27017
# Or use MongoDB Atlas:
# MONGO_URI=mongodb+srv://user:pass@cluster.mongodb.net
# AUDIT_DATABASE=code_copier_dev
# AUDIT_COLLECTION=audit_events

# ============================================================================
# WEBHOOK TESTING
# ============================================================================

# Webhook secret (for signature verification)
# Leave empty for local testing without signature verification
WEBHOOK_SECRET=

# ============================================================================
# SLACK NOTIFICATIONS (Optional)
# ============================================================================

# Slack webhook URL (get from Slack: Apps â†’ Incoming Webhooks)
# Leave empty to disable Slack notifications
SLACK_WEBHOOK_URL=

# Slack channel to post to (default: #code-examples)
SLACK_CHANNEL=#code-examples

# Slack bot username (default: Examples Copier)
SLACK_USERNAME=Examples Copier

# Slack bot icon emoji (default: :robot_face:)
SLACK_ICON_EMOJI=:robot_face:

# Enable/disable Slack notifications (default: true if webhook URL is set)
SLACK_ENABLED=false

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example 1: Local Development with Dry Run
# DRY_RUN="true"
# AUDIT_ENABLED="false"
# METRICS_ENABLED="true"
# CONFIG_FILE="copier-config.example.yaml"
# WEBHOOK_SECRET="test-secret-123"

# Example 2: Local Development with MongoDB Audit Logging
# DRY_RUN="false"
# AUDIT_ENABLED="true"
# MONGO_URI="mongodb://localhost:27017"
# AUDIT_DATABASE="copier_audit"
# METRICS_ENABLED="true"

# Example 3: Local Development with Slack Notifications
# DRY_RUN="true"
# SLACK_WEBHOOK_URL="https://hooks.slack.com/services/YOUR/WEBHOOK/URL"
# SLACK_CHANNEL="#code-examples-dev"
# SLACK_ENABLED="true"

# =============================================================================
# NOTES FOR LOCAL DEVELOPMENT
# =============================================================================

# 1. DIRECT SECRETS (Recommended for local dev):
#    - Use WEBHOOK_SECRET instead of WEBHOOK_SECRET_NAME
#    - Use MONGO_URI instead of MONGO_URI_SECRET_NAME
#    - Use PEM_NAME pointing to Secret Manager (still needed for GitHub auth)
#
# 2. DRY RUN MODE:
#    - Set DRY_RUN="true" to test without making actual commits/PRs
#    - Webhooks are processed, files matched, but no changes made
#
# 3. MONGODB:
#    - For local testing, use mongodb://localhost:27017
#    - Or disable audit logging: AUDIT_ENABLED="false"
#
# 4. SLACK:
#    - Optional for local dev
#    - Useful for testing error notifications
#
# 5. GOOGLE CLOUD:
#    - You still need PEM_NAME for GitHub App authentication
#    - Set up Secret Manager even for local dev
#    - Or use a local PEM file (not recommended)
#
# 6. TESTING:
#    - Use CONFIG_FILE="copier-config.example.yaml" for testing
#    - Set WEBSERVER_PATH="/events" to match GitHub webhook
#    - Use PORT="3000" or any available port

# =============================================================================
# SEE ALSO
# =============================================================================

# - env.yaml.example - Complete reference for all variables
# - env.yaml.production - Production deployment template
# - ../configs/README.md - Comparison of all env files
# - ../docs/LOCAL-TESTING.md - Local development guide

