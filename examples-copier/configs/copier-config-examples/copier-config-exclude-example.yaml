# Example Configuration with exclude_patterns
# This demonstrates how to use exclude_patterns to filter out specific files

source_repo: "mongodb/code-examples"
source_branch: "main"
batch_by_repo: false  # Create separate PRs for each rule

copy_rules:
  # Example 1: Exclude config files from examples
  - name: "go-examples-no-config"
    source_pattern:
      type: "prefix"
      pattern: "examples/go/"
      exclude_patterns:
        - "\.gitignore$"      # Exclude .gitignore
        - "\.env$"            # Exclude .env files
        - "\.env\\..*$"       # Exclude .env.local, .env.production, etc.
        - "config\\.local\\." # Exclude config.local.* files
    targets:
      - repo: "mongodb/docs"
        branch: "main"
        path_transform: "source/code-examples/go/${relative_path}"
        commit_strategy:
          type: "pull_request"
          pr_title: "Update Go examples (no config files)"
          pr_body: "Automated update of Go code examples, excluding configuration files"

  # Example 2: Exclude test files and build artifacts
  - name: "java-server-production-only"
    source_pattern:
      type: "regex"
      pattern: "^server/java-spring/(?P<file>.+)$"
      exclude_patterns:
        - "/test/"            # Exclude test directories
        - "Test\\.java$"      # Exclude test files
        - "/target/"          # Exclude Maven build directory
        - "\\.class$"         # Exclude compiled files
    targets:
      - repo: "mongodb/sample-app-java"
        branch: "main"
        path_transform: "server/${file}"
        commit_strategy:
          type: "pull_request"
          pr_title: "Update Java server (production code only)"
          pr_body: "Automated update excluding tests and build artifacts"

  # Example 3: Exclude dependencies and build artifacts from Node.js project
  - name: "nodejs-app-source-only"
    source_pattern:
      type: "prefix"
      pattern: "apps/nodejs/"
      exclude_patterns:
        - "node_modules/"     # Exclude dependencies
        - "/dist/"            # Exclude build output
        - "/build/"           # Exclude build directory
        - "\\.min\\.js$"      # Exclude minified files
        - "\\.min\\.css$"     # Exclude minified CSS
        - "\\.map$"           # Exclude source maps
    targets:
      - repo: "mongodb/sample-app-nodejs"
        branch: "main"
        path_transform: "${relative_path}"
        commit_strategy:
          type: "pull_request"
          pr_title: "Update Node.js app (source code only)"
          pr_body: "Automated update excluding dependencies and build artifacts"

  # Example 4: Exclude all hidden files
  - name: "python-examples-no-hidden"
    source_pattern:
      type: "glob"
      pattern: "examples/python/**/*.py"
      exclude_patterns:
        - "/\\.[^/]+$"        # Exclude files starting with .
        - "/__pycache__/"     # Exclude Python cache
        - "\\.pyc$"           # Exclude compiled Python files
    targets:
      - repo: "mongodb/docs"
        branch: "main"
        path_transform: "source/code-examples/python/${matched_pattern}"
        commit_strategy:
          type: "pull_request"
          pr_title: "Update Python examples (no hidden files)"
          pr_body: "Automated update excluding hidden files and cache"

  # Example 5: Exclude documentation from code examples
  - name: "typescript-code-no-docs"
    source_pattern:
      type: "prefix"
      pattern: "examples/typescript/"
      exclude_patterns:
        - "README\\.md$"      # Exclude README files
        - "\\.md$"            # Exclude all markdown files
        - "/docs/"            # Exclude docs directory
        - "CHANGELOG"         # Exclude changelog files
    targets:
      - repo: "mongodb/typescript-examples"
        branch: "main"
        path_transform: "examples/${relative_path}"
        commit_strategy:
          type: "pull_request"
          pr_title: "Update TypeScript examples (code only)"
          pr_body: "Automated update excluding documentation files"

  # Example 6: Complex exclusions for a full-stack app
  - name: "fullstack-app-clean"
    source_pattern:
      type: "prefix"
      pattern: "apps/mflix/"
      exclude_patterns:
        # Config files
        - "\.gitignore$"
        - "\.env$"
        - "\.env\\..*$"
        # Dependencies
        - "node_modules/"
        - "vendor/"
        - "__pycache__/"
        # Build artifacts
        - "/dist/"
        - "/build/"
        - "/target/"
        - "\.min\.(js|css)$"
        # Test files
        - "/test/"
        - "/tests/"
        - "\.test\.(js|ts)$"
        - "\.spec\.(js|ts)$"
        # Documentation
        - "README\\.md$"
        - "/docs/"
        # IDE files
        - "\.vscode/"
        - "\.idea/"
    targets:
      - repo: "mongodb/sample-app-mflix"
        branch: "main"
        path_transform: "${relative_path}"
        commit_strategy:
          type: "pull_request"
          pr_title: "Update MFlix app (clean source)"
          pr_body: |
            Automated update of MFlix application
            
            Excludes:
            - Configuration files
            - Dependencies
            - Build artifacts
            - Test files
            - Documentation
            - IDE files

  # Example 7: Exclude specific file types
  - name: "images-and-media-only"
    source_pattern:
      type: "glob"
      pattern: "assets/**/*"
      exclude_patterns:
        - "\\.txt$"           # Exclude text files
        - "\\.md$"            # Exclude markdown
        - "\\.json$"          # Exclude JSON
        - "\\.xml$"           # Exclude XML
        - "\\.yaml$"          # Exclude YAML
        - "\\.yml$"           # Exclude YML
    targets:
      - repo: "mongodb/docs-assets"
        branch: "main"
        path_transform: "images/${matched_pattern}"
        commit_strategy:
          type: "direct"
          commit_message: "Update media assets (images only)"

  # Example 8: Exclude by directory depth
  - name: "top-level-files-only"
    source_pattern:
      type: "regex"
      pattern: "^examples/(?P<lang>[^/]+)/(?P<file>[^/]+)$"  # Only matches files directly in lang dir
      # No subdirectories will match due to pattern, but we can add extra safety:
      exclude_patterns:
        - "/"                 # Exclude anything with a slash (subdirectories)
    targets:
      - repo: "mongodb/docs"
        branch: "main"
        path_transform: "examples/${lang}/${file}"
        commit_strategy:
          type: "pull_request"
          pr_title: "Update top-level example files"
          pr_body: "Automated update of top-level example files only"

