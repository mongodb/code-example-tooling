env_variables:
  # =============================================================================
  # REQUIRED VARIABLES
  # =============================================================================
  
  # GitHub App Configuration
  GITHUB_APP_ID: "YOUR_GITHUB_APP_ID"              # Your GitHub App ID (required)
  INSTALLATION_ID: "YOUR_INSTALLATION_ID"          # GitHub App Installation ID (required)
  REPO_OWNER: "your-org"                           # Source repository owner (required)
  REPO_NAME: "your-repo"                           # Source repository name (required)
  
  # =============================================================================
  # SECRET MANAGER REFERENCES (RECOMMENDED - Most Secure)
  # =============================================================================
  
  # GitHub App Private Key - loaded from Secret Manager
  # Format: projects/PROJECT_NUMBER/secrets/SECRET_NAME/versions/VERSION
  GITHUB_APP_PRIVATE_KEY_SECRET_NAME: "projects/YOUR_PROJECT_NUMBER/secrets/CODE_COPIER_PEM/versions/latest"
  
  # Webhook Secret - loaded from Secret Manager (for signature verification)
  WEBHOOK_SECRET_NAME: "projects/YOUR_PROJECT_NUMBER/secrets/webhook-secret/versions/latest"
  
  # MongoDB URI - loaded from Secret Manager (for audit logging - OPTIONAL)
  MONGO_URI_SECRET_NAME: "projects/YOUR_PROJECT_NUMBER/secrets/mongo-uri/versions/latest"
  
  # =============================================================================
  # ALTERNATIVE: DIRECT SECRETS (NOT RECOMMENDED - Less Secure)
  # =============================================================================
  # Only use these if you're NOT using Secret Manager
  # WARNING: Never commit actual secrets to version control!
  
  # PEM_NAME: "projects/YOUR_PROJECT_NUMBER/secrets/CODE_COPIER_PEM/versions/latest"
  # WEBHOOK_SECRET: "your-webhook-secret-here"
  # MONGO_URI: "mongodb+srv://user:pass@cluster.mongodb.net/dbname"
  
  # =============================================================================
  # APPLICATION SETTINGS
  # =============================================================================

  # Web Server Configuration
  # PORT: "8080"                                   # DO NOT SET - App Engine Flexible sets this automatically
  WEBSERVER_PATH: "/events"                        # Webhook endpoint path (default: /webhook)
  
  # Configuration Files
  CONFIG_FILE: "copier-config.yaml"                # Config file name in source repo (default: copier-config.yaml)
  DEPRECATION_FILE: "deprecated_examples.json"     # Deprecation tracking file (default: deprecated_examples.json)
  
  # Source Branch
  SRC_BRANCH: "main"                               # Branch to copy from (default: main)
  
  # =============================================================================
  # COMMITTER INFORMATION
  # =============================================================================
  # Used when committing deprecation file updates to source repo
  
  COMMITTER_NAME: "GitHub Copier App"              # Git committer name (default: Copier Bot)
  COMMITTER_EMAIL: "bot@example.com"               # Git committer email (default: bot@example.com)
  
  # =============================================================================
  # GOOGLE CLOUD CONFIGURATION
  # =============================================================================
  # For Google Cloud Logging integration

  GOOGLE_CLOUD_PROJECT_ID: "your-project-id"       # GCP Project ID (default: github-copy-code-examples)
  COPIER_LOG_NAME: "code-copier-log"               # Cloud Logging log name (default: copy-copier-log)

  # =============================================================================
  # LOGGING CONFIGURATION
  # =============================================================================
  # Control logging verbosity and output

  # LOG_LEVEL: "debug"                             # Set to "debug" for verbose logging (default: info)
  # COPIER_DEBUG: "true"                           # Alternative way to enable debug mode (default: false)
  # COPIER_DISABLE_CLOUD_LOGGING: "true"           # Disable Google Cloud Logging (useful for local dev)
  
  # =============================================================================
  # FEATURE FLAGS
  # =============================================================================
  
  # Dry Run Mode - process webhooks but don't make actual commits/PRs
  DRY_RUN: "false"                                 # Enable dry-run mode (default: false)
  
  # Audit Logging - log all operations to MongoDB
  AUDIT_ENABLED: "true"                            # Enable audit logging (default: false)
  
  # Metrics - expose /metrics endpoint
  METRICS_ENABLED: "true"                          # Enable metrics endpoint (default: true)
  
  # =============================================================================
  # MONGODB AUDIT LOGGING (OPTIONAL)
  # =============================================================================
  # Only needed if AUDIT_ENABLED is true
  
  # MongoDB Configuration
  # MONGO_URI: "mongodb+srv://user:pass@cluster.mongodb.net/dbname"  # Use MONGO_URI_SECRET_NAME instead
  AUDIT_DATABASE: "copier_audit"                   # MongoDB database name (default: copier_audit)
  AUDIT_COLLECTION: "events"                       # MongoDB collection name (default: events)
  
  # =============================================================================
  # SLACK NOTIFICATIONS (OPTIONAL)
  # =============================================================================
  # Enable Slack notifications for errors and important events
  
  # SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/WEBHOOK/URL"  # Slack webhook URL (enables Slack)
  # SLACK_CHANNEL: "#code-examples"                # Slack channel (default: #code-examples)
  # SLACK_USERNAME: "Examples Copier"              # Slack bot username (default: Examples Copier)
  # SLACK_ICON_EMOJI: ":robot_face:"               # Slack bot icon (default: :robot_face:)
  # SLACK_ENABLED: "true"                          # Explicitly enable/disable Slack (default: auto-enabled if URL set)
  
  # =============================================================================
  # DEFAULT BEHAVIORS (OPTIONAL)
  # =============================================================================
  # System-wide defaults that individual config rules can override

  DEFAULT_RECURSIVE_COPY: "true"                   # Default recursive copy behavior (default: true)
  DEFAULT_PR_MERGE: "false"                        # Default auto-merge PRs without review (default: false)
  DEFAULT_COMMIT_MESSAGE: "Automated PR with updated examples"  # Default commit message (default: shown)

  # =============================================================================
  # GITHUB API CONFIGURATION (OPTIONAL)
  # =============================================================================
  # Fine-tune GitHub API retry and polling behavior

  # GitHub API Retry Configuration
  # Controls retry behavior when GitHub API calls fail due to eventual consistency
  # GITHUB_API_MAX_RETRIES: "3"                    # Number of retry attempts (default: 3)
  # GITHUB_API_INITIAL_RETRY_DELAY: "500"          # Initial retry delay in milliseconds (default: 500)
  #                                                 # Uses exponential backoff: 500ms, 1s, 2s, etc.

  # PR Merge Polling Configuration
  # Controls how long to wait for GitHub to compute PR mergeability
  # PR_MERGE_POLL_MAX_ATTEMPTS: "20"               # Max polling attempts (default: 20)
  # PR_MERGE_POLL_INTERVAL: "500"                  # Polling interval in milliseconds (default: 500)
  #                                                 # Total wait time = attempts Ã— interval (default: ~10 seconds)
  
  # =============================================================================
  # TESTING / DEVELOPMENT OVERRIDES (DO NOT USE IN PRODUCTION)
  # =============================================================================

  # Skip Secret Manager - for local testing/CI only
  # When enabled, uses direct environment variables instead of Secret Manager
  # WARNING: Never enable in production!
  # SKIP_SECRET_MANAGER: "true"

  # Direct GitHub App Private Key (only when SKIP_SECRET_MANAGER=true)
  # Use one of these formats:
  # GITHUB_APP_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY-----\n...\n-----END RSA PRIVATE KEY-----"
  # GITHUB_APP_PRIVATE_KEY_B64: "base64-encoded-private-key"

  # Environment file path (alternative to --env-vars-file flag)
  # ENV_FILE: "./configs/.env.test"

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================
#
# 1. SECURITY BEST PRACTICES:
#    - Use Secret Manager for all sensitive data (recommended)
#    - Never commit env.yaml with actual secrets to version control
#    - Add env.yaml to .gitignore
#
# 2. SECRET MANAGER SETUP:
#    - Create secrets: gcloud secrets create SECRET_NAME --data-file=FILE
#    - Grant access: ./scripts/grant-secret-access.sh
#    - Use format: projects/PROJECT_NUMBER/secrets/SECRET_NAME/versions/latest
#
# 3. REQUIRED VARIABLES:
#    - GITHUB_APP_ID
#    - INSTALLATION_ID
#    - REPO_OWNER
#    - REPO_NAME
#    - GITHUB_APP_PRIVATE_KEY_SECRET_NAME (or PEM_NAME)
#
# 4. RECOMMENDED SETUP:
#    - Use Secret Manager for: GitHub private key, webhook secret, MongoDB URI
#    - Enable audit logging for production
#    - Enable metrics for monitoring
#    - Configure Slack for error notifications
#
# 5. LOCAL DEVELOPMENT:
#    - Set DRY_RUN: "true" to test without making actual changes
#    - Disable audit logging if you don't have MongoDB
#    - Use direct secrets (not Secret Manager) for easier local testing
#
# 6. DEPLOYMENT:
#    - Copy this file: cp configs/env.yaml.example env.yaml
#    - Fill in your values
#    - Deploy: gcloud app deploy app.yaml --env-vars-file=env.yaml
#
# =============================================================================
# VARIABLE REFERENCE
# =============================================================================
#
# See CONFIG-VALIDATION-REPORT.md for complete variable documentation
# See docs/DEPLOYMENT.md for deployment guide
# See docs/DEPLOYMENT-CHECKLIST.md for step-by-step checklist
#

