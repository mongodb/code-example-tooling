[{"type":"text","position":{"start":{"line":32}},"value":"Geospatial Data"}],"domain":"std","name":"label","target":"geospatial","flag":"","url":"https://www.mongodb.com/docs/atlas/app-services/schemas/types/#std-label-geospatial"},{"type":"text","position":{"start":{"line":32}},"value":" in the App Services documentation."}]},{"type":"section","position":{"start":{"line":36}},"children":[{"type":"heading","position":{"start":{"line":36}},"children":[{"type":"text","position":{"start":{"line":36}},"value":"Geospatial Data Types"}],"id":"geospatial-data-types"},{"type":"paragraph","position":{"start":{"line":38}},"children":[{"type":"text","position":{"start":{"line":38}},"value":"The SDK supports geospatial queries using the following data types:"}]},{"type":"list","position":{"start":{"line":40}},"children":[{"type":"listItem","position":{"start":{"line":40}},"children":[{"type":"paragraph","position":{"start":{"line":40}},"children":[{"type":"text","position":{"start":{"line":40}},"value":"GeoPoint"}]}]},{"type":"listItem","position":{"start":{"line":40}},"children":[{"type":"paragraph","position":{"start":{"line":41}},"children":[{"type":"text","position":{"start":{"line":41}},"value":"GeoCircle"}]}]},{"type":"listItem","position":{"start":{"line":40}},"children":[{"type":"paragraph","position":{"start":{"line":42}},"children":[{"type":"text","position":{"start":{"line":42}},"value":"GeoBox"}]}]},{"type":"listItem","position":{"start":{"line":40}},"children":[{"type":"paragraph","position":{"start":{"line":43}},"children":[{"type":"text","position":{"start":{"line":43}},"value":"GeoPolygon"}]}]}],"enumtype":"unordered"},{"type":"paragraph","position":{"start":{"line":45}},"children":[{"type":"text","position":{"start":{"line":45}},"value":"The SDK provides these geospatial data types to simplify querying geospatial data. You "},{"type":"emphasis","position":{"start":{"line":45}},"children":[{"type":"text","position":{"start":{"line":45}},"value":"cannot"}]},{"type":"text","position":{"start":{"line":45}},"value":" persist these data types directly."}]},{"type":"paragraph","position":{"start":{"line":47}},"children":[{"type":"text","position":{"start":{"line":47}},"value":"For information on how to persist geospatial data, refer to the\n"},{"type":"ref_role","position":{"start":{"line":47}},"children":[{"type":"text","position":{"start":{"line":47}},"value":"Persisting GeoPoint Data"}],"domain":"std","name":"label","target":"persist-geopoint","flag":"","fileid":["sdk/dotnet/model-data/data-types/geospatials","std-label-persist-geopoint"]},{"type":"text","position":{"start":{"line":47}},"value":" section on this page."}]},{"type":"target","position":{"start":{"line":50}},"children":[{"type":"target_identifier","position":{"start":{"line":50}},"children":[{"type":"text","position":{"start":{"line":53}},"value":"GeoPoint"}],"ids":["geopoint"]}],"domain":"std","name":"label","html_id":"std-label-geopoint"},{"type":"section","position":{"start":{"line":53}},"children":[{"type":"heading","position":{"start":{"line":53}},"children":[{"type":"text","position":{"start":{"line":53}},"value":"GeoPoint"}],"id":"geopoint"},{"type":"paragraph","position":{"start":{"line":54}},"children":[{"type":"text","position":{"start":{"line":54}},"value":"A "},{"type":"reference","position":{"start":{"line":54}},"children":[{"type":"text","position":{"start":{"line":54}},"value":"GeoPoint"}],"refuri":"https://www.mongodb.com/docs/realm-sdks/dotnet/latest/reference/Realms.GeoPoint.html"},{"type":"text","position":{"start":{"line":54}},"value":" defines a specific\nlocation on the Earth's surface. All of the geospatial data types use "},{"type":"literal","position":{"start":{"line":54}},"children":[{"type":"text","position":{"start":{"line":54}},"value":"GeoPoints"}]},{"type":"text","position":{"start":{"line":54}},"value":"\nto define their location."}]},{"type":"directive","position":{"start":{"line":58}},"children":[{"type":"paragraph","position":{"start":{"line":60}},"children":[{"type":"text","position":{"start":{"line":60}},"value":"In methods that take a "},{"type":"literal","position":{"start":{"line":60}},"children":[{"type":"text","position":{"start":{"line":60}},"value":"GeoPoint"}]},{"type":"text","position":{"start":{"line":60}},"value":", you can alternatively provide a tuple of\ndoubles, where the first double is the latitude and the second double is the\nlongitude. The SDK interprets these tuples as "},{"type":"literal","position":{"start":{"line":60}},"children":[{"type":"text","position":{"start":{"line":60}},"value":"GeoPoints"}]},{"type":"text","position":{"start":{"line":60}},"value":". The examples on\nthis page demonstrate both approaches."}]}],"domain":"","name":"note","argument":[]},{"type":"target","position":{"start":{"line":65}},"children":[{"type":"target_identifier","position":{"start":{"line":65}},"children":[{"type":"text","position":{"start":{"line":68}},"value":"GeoCircle"}],"ids":["geocircle"]}],"domain":"std","name":"label","html_id":"std-label-geocircle"}]},{"type":"section","position":{"start":{"line":68}},"children":[{"type":"heading","position":{"start":{"line":68}},"children":[{"type":"text","position":{"start":{"line":68}},"value":"GeoCircle"}],"id":"geocircle"},{"type":"paragraph","position":{"start":{"line":69}},"children":[{"type":"text","position":{"start":{"line":69}},"value":"A "},{"type":"reference","position":{"start":{"line":69}},"children":[{"type":"text","position":{"start":{"line":69}},"value":"GeoCircle"}],"refuri":"https://www.mongodb.com/docs/realm-sdks/dotnet/latest/reference/Realms.GeoCircle.html"},{"type":"text","position":{"start":{"line":69}},"value":" defines a circle on\nthe Earth's surface. You define a "},{"type":"literal","position":{"start":{"line":69}},"children":[{"type":"text","position":{"start":{"line":69}},"value":"GeoCircle"}]},{"type":"text","position":{"start":{"line":69}},"value":" by providing a "},{"type":"literal","position":{"start":{"line":69}},"children":[{"type":"text","position":{"start":{"line":69}},"value":"GeoPoint"}]},{"type":"text","position":{"start":{"line":69}},"value":"\nfor the center of the circle and a "},{"type":"reference","position":{"start":{"line":69}},"children":[{"type":"text","position":{"start":{"line":69}},"value":"Distance"}],"refuri":"https://www.mongodb.com/docs/realm-sdks/dotnet/latest/reference/Realms.Distance.html"},{"type":"text","position":{"start":{"line":69}},"value":"\nobject to specify the radius of the circle."}]},{"type":"directive","position":{"start":{"line":74}},"children":[{"type":"paragraph","position":{"start":{"line":76}},"children":[{"type":"text","position":{"start":{"line":76}},"value":"You can define the radius in kilometers, miles, degrees, or radians."}]}],"domain":"","name":"note","argument":[]},{"type":"paragraph","position":{"start":{"line":78}},"children":[{"type":"text","position":{"start":{"line":78}},"value":"The following code shows two examples of creating a circle:"}]},{"type":"directive","position":{"start":{"line":80}},"children":[{"type":"code","position":{"start":{"line":80}},"lang":"csharp","copyable":true,"value":"var circle1 = new GeoCircle((47.8, -122.6),\n    Distance.FromKilometers(44.4));\nvar circle2 = new GeoCircle(\n    new GeoPoint(latitude: 47.3, longitude: -121.9),\n    Distance.FromDegrees(0.25));\n","linenos":false}],"domain":"","name":"literalinclude","argument":[{"type":"text","position":{"start":{"line":80}},"value":"/examples/generated/dotnet/Geospatial.snippet.geocircle.cs"}],"options":{"language":"csharp"}},{"type":"directive","position":{"start":{"line":83}},"children":[],"domain":"","name":"figure","argument":[{"type":"text","position":{"start":{"line":83}},"value":"/images/geocircles.png"}],"options":{"alt":"Two GeoCircles","width":"150","lightbox":true,"checksum":"f5544571c657cb31c1a1f40bfa1ae6c082f072e0d893465af26667f7c19aef10","height":"137.70491803278688","loading":"lazy"}},{"type":"target","position":{"start":{"line":88}},"children":[{"type":"target_identifier","position":{"start":{"line":88}},"children":[{"type":"text","position":{"start":{"line":91}},"value":"GeoBox"}],"ids":["geobox"]}],"domain":"std","name":"label","html_id":"std-label-geobox"}]},{"type":"section","position":{"start":{"line":91}},"children":[{"type":"heading","position":{"start":{"line":91}},"children":[{"type":"text","position":{"start":{"line":91}},"value":"GeoBox"}],"id":"geobox"},{"type":"paragraph","position":{"start":{"line":92}},"children":[{"type":"text","position":{"start":{"line":92}},"value":"A "},{"type":"reference","position":{"start":{"line":92}},"children":[{"type":"text","position":{"start":{"line":92}},"value":"GeoBox"}],"refuri":"https://www.mongodb.com/docs/realm-sdks/dotnet/latest/reference/Realms.GeoBox.html"},{"type":"text","position":{"start":{"line":92}},"value":" defines a rectangle on\nthe Earth's surface. You define the rectangle by specifying the bottom left\n(southwest) corner and the top right (northeast) corner. The following example\ncreates 2 boxes:"}]},{"type":"directive","position":{"start":{"line":97}},"children":[{"type":"code","position":{"start":{"line":97}},"lang":"csharp","copyable":true,"value":"var box1 = new GeoBox(bottomLeftCorner: (47.3, -122.7),\n    topRightCorner: (48.1, -122.1));\n\nvar box2 = new GeoBox(new GeoPoint(47.5, -122.4),\n   new GeoPoint(47.9, -121.8));\n","linenos":false}],"domain":"","name":"literalinclude","argument":[{"type":"text","position":{"start":{"line":97}},"value":"/examples/generated/dotnet/Geospatial.snippet.geobox.cs"}],"options":{"language":"csharp"}},{"type":"directive","position":{"start":{"line":100}},"children":[],"domain":"","name":"figure","argument":[{"type":"text","position":{"start":{"line":100}},"value":"/images/geoboxes.png"}],"options":{"alt":"2 GeoBoxes","width":"150","lightbox":true,"checksum":"92f9199af64b038a003f385a1da59d15501c05580d45216cd08109c822553b5f","height":"130.95238095238096","loading":"lazy"}},{"type":"target","position":{"start":{"line":105}},"children":[{"type":"target_identifier","position":{"start":{"line":105}},"children":[{"type":"text","position":{"start":{"line":108}},"value":"GeoPolygon"}],"ids":["geopolygon"]}],"domain":"std","name":"label","html_id":"std-label-geopolygon"}]},{"type":"section","position":{"start":{"line":108}},"children":[{"type":"heading","position":{"start":{"line":108}},"children":[{"type":"text","position":{"start":{"line":108}},"value":"GeoPolygon"}],"id":"geopolygon"},{"type":"paragraph","position":{"start":{"line":109}},"children":[{"type":"text","position":{"start":{"line":109}},"value":"A "},{"type":"reference","position":{"start":{"line":109}},"children":[{"type":"text","position":{"start":{"line":109}},"value":"GeoPolygon"}],"refuri":"https://www.mongodb.com/docs/realm-sdks/dotnet/latest/reference/Realms.GeoPolygon.html"},{"type":"text","position":{"start":{"line":109}},"value":" defines a polygon\non the Earth's surface. Because a polygon is a closed shape, you must provide a\nminimum of 4 points: 3 points to define the polygon's shape, and a fourth to\nclose the shape."}]},{"type":"directive","position":{"start":{"line":114}},"children":[{"type":"paragraph","position":{"start":{"line":116}},"children":[{"type":"text","position":{"start":{"line":116}},"value":"The fourth point in a polygon must be the same as the first point."}]}],"domain":"","name":"important","argument":[]},{"type":"paragraph","position":{"start":{"line":118}},"children":[{"type":"text","position":{"start":{"line":118}},"value":"You can also exclude areas within a polygon by defining one or more \"holes\". A\nhole is another polygon whose bounds fit completely within the outer polygon.\nThe following example creates 3 polygons: one is a basic polygon with 5 points,\none is the same polygon with a single hole, and the third is the same polygon\nwith two holes:"}]},{"type":"directive","position":{"start":{"line":124}},"children":[{"type":"code","position":{"start":{"line":124}},"lang":"csharp","copyable":true,"value":"var basicPolygon = new GeoPolygon((48, -122.8),\n    (48.2, -121.8), (47.6, -121.6), (47.0, -122.0),\n    (47.2, -122.6), (48, -122.8));\n\n// Create a polygon with a single hole\nvar outerRing = new GeoPoint[] {\n    (48, -122.8), (48.2, -121.8),\n    (47.6, -121.6), (47.0, -122.0), (47.2, -122.6),\n    (48, -122.8) };\n\nvar hole1 = new GeoPoint[] {\n    (47.8, -122.6), (47.7, -122.2),\n    (47.4, -122.6), (47.6, -122.5),\n    (47.8, -122.6) };\n\nvar polygonWithOneHole = new GeoPolygon(outerRing, hole1);\n\n// Add a second hole to the polygon\nvar hole2 = new GeoPoint[] {\n    (47.55, -122.05), (47.5, -121.9),(47.3, -122.1),\n    (47.55, -122.05) };\n\nvar polygonWithTwoHoles =\n    new GeoPolygon(outerRing, hole1, hole2);\n","linenos":false}],"domain":"","name":"literalinclude","argument":[{"type":"text","position":{"start":{"line":124}},"value":"/examples/generated/dotnet/Geospatial.snippet.geopolygon.cs"}],"options":{"language":"csharp"}},{"type":"directive","position":{"start":{"line":127}},"children":[],"domain":"","name":"figure","argument":[{"type":"text","position":{"start":{"line":127}},"value":"/images/geopolygons.png"}],"options":{"alt":"3 GeoPolygons","width":"250","lightbox":true,"checksum":"0ade458e7b371336d9beec4b60e8a159ac9d3d0ded719e2dbb84a5077dab752a","height":"69.21140939597315","loading":"lazy"}},{"type":"target","position":{"start":{"line":132}},"children":[{"type":"target_identifier","position":{"start":{"line":132}},"children":[{"type":"text","position":{"start":{"line":135}},"value":"Persisting GeoPoint Data"}],"ids":["persist-geopoint"]}],"domain":"std","name":"label","html_id":"std-label-persist-geopoint"}]}]},{"type":"section","position":{"start":{"line":135}},"children":[{"type":"heading","position":{"start":{"line":135}},"children":[{"type":"text","position":{"start":{"line":135}},"value":"Persisting GeoPoint Data"}],"id":"persisting-geopoint-data"},{"type":"directive","position":{"start":{"line":137}},"children":[{"type":"root","position":{"start":{"line":0}},"children":[{"type":"directive","position":{"start":{"line":0}},"children":[{"type":"paragraph","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"Currently, you can only persist geospatial data. Geospatial data types "},{"type":"emphasis","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"cannot"}]},{"type":"text","position":{"start":{"line":2}},"value":" be persisted directly. For example, you\ncan't declare a property that is of type "},{"type":"literal","position":{"start":{"line":2}},"children":[{"type":"text","position":{"start":{"line":2}},"value":"GeoBox"}]},{"type":"text","position":{"start":{"line":2}},"value":"."}]},{"type":"paragraph","position":{"start":{"line":5}},"children":[{"type":"text","position":{"start":{"line":5}},"value":"These types can only be used as arguments for geospatial queries."}]}],"domain":"","name":"important","argument":[{"type":"text","position":{"start":{"line":0}},"value":"Cannot Persist Geospatial Data Types"}]}],"fileid":"includes/important-cant-persist-geospatial.rst"}],"domain":"","name":"include","argument":[{"type":"text","position":{"start":{"line":137}},"value":"/includes/important-cant-persist-geospatial.rst"}]},{"type":"paragraph","position":{"start":{"line":139}},"children":[{"type":"text","position":{"start":{"line":139}},"value":"If you want to persist "},{"type":"literal","position":{"start":{"line":139}},"children":[{"type":"text","position":{"start":{"line":139}},"value":"GeoPoint"}]},{"type":"text","position":{"start":{"line":139}},"value":" data, it must conform to the\n"},{"type":"reference","position":{"start":{"line":139}},"children":[{"type":"text","position":{"start":{"line":139}},"value":"GeoJSON spec"}],"refuri":"https://datatracker.ietf.org/doc/html/rfc7946"},{"type":"named_reference","position":{"start":{"line":139}},"refname":"GeoJSON spec","refuri":"https://datatracker.ietf.org/doc/html/rfc7946"},{"type":"text","position":{"start":{"line":139}},"value":"."}]},{"type":"section","position":{"start":{"line":143}},"children":[{"type":"heading","position":{"start":{"line":143}},"children":[{"type":"text","position":{"start":{"line":143}},"value":"Creating a GeoJSON-Compatible Class"}],"id":"creating-a-geojson-compatible-class"},{"type":"paragraph","position":{"start":{"line":145}},"children":[{"type":"text","position":{"start":{"line":145}},"value":"To create a class that conforms to the GeoJSON spec, you:"}]},{"type":"list","position":{"start":{"line":147}},"children":[{"type":"listItem","position":{"start":{"line":147}},"children":[{"type":"paragraph","position":{"start":{"line":147}},"children":[{"type":"text","position":{"start":{"line":147}},"value":"Create an embedded realm object (a class that inherits from\n"},{"type":"reference","position":{"start":{"line":147}},"children":[{"type":"text","position":{"start":{"line":147}},"value":"IEmbeddedObject"}],"refuri":"https://www.mongodb.com/docs/realm-sdks/dotnet/latest/reference/Realms.IEmbeddedObject.html"},{"type":"text","position":{"start":{"line":147}},"value":")."}]}]},{"type":"listItem","position":{"start":{"line":147}},"children":[{"type":"paragraph","position":{"start":{"line":150}},"children":[{"type":"text","position":{"start":{"line":150}},"value":"At a minimum, add the two fields required by the GeoJSON spec:"}]},{"type":"list","position":{"start":{"line":152}},"children":[{"type":"listItem","position":{"start":{"line":152}},"children":[{"type":"paragraph","position":{"start":{"line":152}},"children":[{"type":"text","position":{"start":{"line":152}},"value":"A field of type "},{"type":"literal","position":{"start":{"line":152}},"children":[{"type":"text","position":{"start":{"line":152}},"value":"IList<double>"}]},{"type":"text","position":{"start":{"line":152}},"value":" that maps to a \"coordinates\" (case sensitive)\nproperty in the realm schema."}]}]},{"type":"listItem","position":{"start":{"line":152}},"children":[{"type":"paragraph","position":{"start":{"line":155}},"children":[{"type":"text","position":{"start":{"line":155}},"value":"A field of type "},{"type":"literal","position":{"start":{"line":155}},"children":[{"type":"text","position":{"start":{"line":155}},"value":"string"}]},{"type":"text","position":{"start":{"line":155}},"value":" that maps to a \"type\" property. The value of this\nfield must be \"Point\"."}]}]}],"enumtype":"unordered"}]}],"enumtype":"arabic"},{"type":"paragraph","position":{"start":{"line":158}},"children":[{"type":"text","position":{"start":{"line":158}},"value":"The following example shows an embedded class named \"CustomGeoPoint\" that is used\nto persist GeoPoint data:"}]},{"type":"directive","position":{"start":{"line":161}},"children":[{"type":"code","position":{"start":{"line":161}},"lang":"csharp","copyable":true,"value":"public partial class CustomGeoPoint : IEmbeddedObject\n{\n    [MapTo(\"coordinates\")]\n    public IList<double> Coordinates { get; } = null!;\n\n    [MapTo(\"type\")]\n    private string Type { get; set; } = \"Point\";\n\n    public CustomGeoPoint(double latitude, double longitude)\n    {\n        Coordinates.Add(longitude);\n        Coordinates.Add(latitude);\n    }\n}\n","linenos":false}],"domain":"","name":"literalinclude","argument":[{"type":"text","position":{"start":{"line":161}},"value":"/examples/generated/dotnet/CustomGeoPoint.snippet.customgeopoint.cs"}],"options":{"language":"csharp"}}]},{"type":"section","position":{"start":{"line":165}},"children":[{"type":"heading","position":{"start":{"line":165}},"children":[{"type":"text","position":{"start":{"line":165}},"value":"Using the Embedded Class"}],"id":"using-the-embedded-class"},{"type":"paragraph","position":{"start":{"line":166}},"children":[{"type":"text","position":{"start":{"line":166}},"value":"You then use the custom GeoPoint class in your realm model, as shown in the\nfollowing example:"}]},{"type":"directive","position":{"start":{"line":169}},"children":[{"type":"code","position":{"start":{"line":169}},"lang":"csharp","copyable":true,"emphasize_lines":[[7,7]],"value":"public partial class Company : IRealmObject\n{\n    [PrimaryKey]\n    [MapTo(\"_id\")]\n    public Guid Id { get; private set; } = Guid.NewGuid();\n\n    public CustomGeoPoint? Location { get; set; }\n\n    public Company() { }\n}\n","linenos":false}],"domain":"","name":"literalinclude","argument":[{"type":"text","position":{"start":{"line":169}},"value":"/examples/generated/dotnet/Geospatial.snippet.usingcustomgeopoint.cs"}],"options":{"language":"csharp","emphasize-lines":"7"}},{"type":"paragraph","position":{"start":{"line":173}},"children":[{"type":"text","position":{"start":{"line":173}},"value":"You then add instances of your class to realm just like any other Realm model:"}]},{"type":"directive","position":{"start":{"line":175}},"children":[{"type":"code","position":{"start":{"line":175}},"lang":"csharp","copyable":true,"value":"realm.WriteAsync(() =>\n{\n    realm.Add(new Company\n    {\n        Location = new CustomGeoPoint(47.68, -122.35)\n    });\n    realm.Add(new Company\n    {\n        Location = new CustomGeoPoint(47.9, -121.85)\n    });\n});\n","linenos":false}],"domain":"","name":"literalinclude","argument":[{"type":"text","position":{"start":{"line":175}},"value":"/examples/generated/dotnet/Geospatial.snippet.geopoint.cs"}],"options":{"language":"csharp"}},{"type":"paragraph","position":{"start":{"line":178}},"children":[{"type":"text","position":{"start":{"line":178}},"value":"The following image shows the results of creating these two company objects."}]},{"type":"directive","position":{"start":{"line":180}},"children":[],"domain":"","name":"figure","argument":[{"type":"text","position":{"start":{"line":180}},"value":"/images/geopoints.png"}],"options":{"alt":"2 GeoPoints","width":"150","lightbox":true,"checksum":"553c99508db5405d14c182cc9ba8e20456507591e4f9efda95e2f4897e1913ca","height":"135.71428571428572","loading":"lazy"}},{"type":"target","position":{"start":{"line":185}},"children":[{"type":"target_identifier","position":{"start":{"line":185}},"children":[{"type":"text","position":{"start":{"line":188}},"value":"Query Geospatial Data"}],"ids":["dotnet-query-geospatial"]}],"domain":"std","name":"label","html_id":"std-label-dotnet-query-geospatial"}]}]},{"type":"section","position":{"start":{"line":188}},"children":[{"type":"heading","position":{"start":{"line":188}},"children":[{"type":"text","position":{"start":{"line":188}},"value":"Query Geospatial Data"}],"id":"query-geospatial-data"},{"type":"paragraph","position":{"start":{"line":189}},"children":[{"type":"text","position":{"start":{"line":189}},"value":"To query against geospatial data, you can use the\n"},{"type":"reference","position":{"start":{"line":189}},"children":[{"type":"text","position":{"start":{"line":189}},"value":"GeoWithin"}],"refuri":"https://www.mongodb.com/docs/realm-sdks/dotnet/latest/reference/Realms.QueryMethods.html#Realms_QueryMethods_GeoWithin_Realms_IEmbeddedObject_Realms_GeoShapeBase_"},{"type":"text","position":{"start":{"line":189}},"value":"\nmethod, or you can use the "},{"type":"literal","position":{"start":{"line":189}},"children":[{"type":"text","position":{"start":{"line":189}},"value":"geoWithin"}]},{"type":"text","position":{"start":{"line":189}},"value":" operator with "},{"type":"ref_role","position":{"start":{"line":189}},"children":[{"type":"text","position":{"start":{"line":189}},"value":"RQL"}],"domain":"std","name":"label","target":"dotnet-realm-query-language","flag":"","fileid":["sdk/dotnet/crud/filter","std-label-dotnet-realm-query-language"]},{"type":"text","position":{"start":{"line":189}},"value":".\nThe "},{"type":"literal","position":{"start":{"line":189}},"children":[{"type":"text","position":{"start":{"line":189}},"value":"GeoWithin"}]},{"type":"text","position":{"start":{"line":189}},"value":" method takes the \"coordinates\" property of an embedded object\nthat defines the point we're querying, and one of the geospatial shapes to\ncheck if that point is contained within the shape."}]},{"type":"directive","position":{"start":{"line":196}},"children":[{"type":"paragraph","position":{"start":{"line":198}},"children":[{"type":"text","position":{"start":{"line":198}},"value":"The format for querying geospatial data is the same regardless the shape of\nthe geodata region."}]}],"domain":"","name":"note","argument":[]},{"type":"paragraph","position":{"start":{"line":201}},"children":[{"type":"text","position":{"start":{"line":201}},"value":"The following example shows the difference between querying with the "},{"type":"literal","position":{"start":{"line":201}},"children":[{"type":"text","position":{"start":{"line":201}},"value":"GeoWithin"}]},{"type":"text","position":{"start":{"line":201}},"value":"\nmethod and RQL:"}]},{"type":"directive","position":{"start":{"line":204}},"children":[{"type":"code","position":{"start":{"line":204}},"lang":"csharp","copyable":true,"value":"var GeoWthinExample = realm.All<Company>()\n    .Where(c => QueryMethods.GeoWithin(c.Location, circle1));\n\nvar RQLExample = realm.All<Company>()\n    .Filter(\"Location geoWithin $0\", circle2);\n","linenos":false}],"domain":"","name":"literalinclude","argument":[{"type":"text","position":{"start":{"line":204}},"value":"/examples/generated/dotnet/Geospatial.snippet.rql-geowithin.cs"}],"options":{"language":"csharp"}},{"type":"paragraph","position":{"start":{"line":207}},"children":[{"type":"text","position":{"start":{"line":207}},"value":"The following examples show querying against various shapes to return a list of\ncompanies within the shape:"}]},{"type":"paragraph","position":{"start":{"line":210}},"children":[{"type":"strong","position":{"start":{"line":210}},"children":[{"type":"text","position":{"start":{"line":210}},"value":"GeoCircle"}]}]},{"type":"directive","position":{"start":{"line":212}},"children":[{"type":"code","position":{"start":{"line":212}},"lang":"csharp","copyable":true,"value":"var companiesInCircle = realm.All<Company>()\n    .Where(c => QueryMethods.GeoWithin(c.Location, circle1));\n\nvar companiesInSmallerCircle = realm.All<Company>()\n    .Where(c => QueryMethods.GeoWithin(c.Location, circle2));\n","linenos":false}],"domain":"","name":"literalinclude","argument":[{"type":"text","position":{"start":{"line":212}},"value":"/examples/generated/dotnet/Geospatial.snippet.geocircle-query.cs"}],"options":{"language":"csharp"}},{"type":"directive","position":{"start":{"line":215}},"children":[],"domain":"","name":"figure","argument":[{"type":"text","position":{"start":{"line":215}},"value":"/images/geocircles-query.png"}],"options":{"alt":"Querying a GeoCircle example.","width":"150","lightbox":true,"checksum":"9ba1b335a38caa788505b7881c3350f291fb382fe24188bf8def13c6c2b4b468","height":"153.17460317460316","loading":"lazy"}},{"type":"paragraph","position":{"start":{"line":220}},"children":[{"type":"strong","position":{"start":{"line":220}},"children":[{"type":"text","position":{"start":{"line":220}},"value":"GeoBox"}]}]},{"type":"directive","position":{"start":{"line":222}},"children":[{"type":"code","position":{"start":{"line":222}},"lang":"csharp","copyable":true,"value":"var companiesInBox1 = realm.All<Company>()\n    .Where(c => QueryMethods.GeoWithin(c.Location, box1));\n\nvar companiesInBox2 = realm.All<Company>()\n    .Where(c => QueryMethods.GeoWithin(c.Location, box2));\n","linenos":false}],"domain":"","name":"literalinclude","argument":[{"type":"text","position":{"start":{"line":222}},"value":"/examples/generated/dotnet/Geospatial.snippet.geobox-query.cs"}],"options":{"language":"csharp"}},{"type":"directive","position":{"start":{"line":225}},"children":[],"domain":"","name":"figure","argument":[{"type":"text","position":{"start":{"line":225}},"value":"/images/geoboxes-query.png"}],"options":{"alt":"Querying a GeoBox example.","width":"150","checksum":"02425c30f632056e14bc5594929c229109e9f7d89f62412c65e8904d3f0c8793","height":"152.38095238095238","loading":"lazy"}},{"type":"paragraph","position":{"start":{"line":229}},"children":[{"type":"strong","position":{"start":{"line":229}},"children":[{"type":"text","position":{"start":{"line":229}},"value":"GeoPolygon"}]}]},{"type":"directive","position":{"start":{"line":231}},"children":[{"type":"code","position":{"start":{"line":231}},"lang":"csharp","copyable":true,"value":"var companiesInBasicPolygon = realm.All<Company>()\n    .Where(c => QueryMethods\n       .GeoWithin(c.Location, basicPolygon));\n\nvar companiesInPolygon = realm.All<Company>()\n    .Where(c => QueryMethods\n       .GeoWithin(c.Location, polygonWithTwoHoles));\n","linenos":false}],"domain":"","name":"literalinclude","argument":[{"type":"text","position":{"start":{"line":231}},"value":"/examples/generated/dotnet/Geospatial.snippet.geopolygon-query.cs"}],"options":{"language":"csharp"}},{"type":"directive","position":{"start":{"line":234}},"children":[],"domain":"","name":"figure","argument":[{"type":"text","position":{"start":{"line":234}},"value":"/images/geopolygons-query.png"}],"options":{"alt":"Querying a GeoPolygon example.","width":"150","lightbox":true,"checksum":"19aa8041378e94ee165afa4a35c7592176cc524b796dda4256b0700618063870","height":"74.41558441558442","loading":"lazy"}}]}]}],"fileid":"sdk/dotnet/model-data/data-types/geospatials.txt","options":{"headings":[{"depth":2,"id":"geospatial-data-types","title":[{"type":"text","position":{"start":{"line":36}},"value":"Geospatial Data Types"}],"selector_ids":{}},{"depth":3,"id":"geopoint","title":[{"type":"text","position":{"start":{"line":53}},"value":"GeoPoint"}],"selector_ids":{}},{"depth":3,"id":"geocircle","title":[{"type":"text","position":{"start":{"line":68}},"value":"GeoCircle"}],"selector_ids":{}},{"depth":3,"id":"geobox","title":[{"type":"text","position":{"start":{"line":91}},"value":"GeoBox"}],"selector_ids":{}},{"depth":3,"id":"geopolygon","title":[{"type":"text","position":{"start":{"line":108}},"value":"GeoPolygon"}],"selector_ids":{}},{"depth":2,"id":"persisting-geopoint-data","title":[{"type":"text","position":{"start":{"line":135}},"value":"Persisting GeoPoint Data"}],"selector_ids":{}},{"depth":3,"id":"creating-a-geojson-compatible-class","title":[{"type":"text","position":{"start":{"line":143}},"value":"Creating a GeoJSON-Compatible Class"}],"selector_ids":{}},{"depth":3,"id":"using-the-embedded-class","title":[{"type":"text","position":{"start":{"line":165}},"value":"Using the Embedded Class"}],"selector_ids":{}},{"depth":2,"id":"query-geospatial-data","title":[{"type":"text","position":{"start":{"line":188}},"value":"Query Geospatial Data"}],"selector_ids":{}}]}},"build_id":"67d9a220c9d07e92ef9fe0ba","created_at":"2025-03-18T16:41:06.435Z","deleted":false,"facets":[{"category":"programming_language","value":"csharp","sub_facets":null,"display_name":"C#"},{"category":"target_product","value":"realm","sub_facets":null,"display_name":"Realm"}],"filename":"sdk/dotnet/model-data/data-types/geospatials.txt","static_assets":[{"checksum":"02425c30f632056e14bc5594929c229109e9f7d89f62412c65e8904d3f0c8793","key":"/images/geoboxes-query.png","updated_at":"2025-03-18T16:41:06.435Z"},{"checksum":"92f9199af64b038a003f385a1da59d15501c05580d45216cd08109c822553b5f","key":"/images/geoboxes.png","updated_at":"2025-03-18T16:41:06.435Z"},{"checksum":"9ba1b335a38caa788505b7881c3350f291fb382fe24188bf8def13c6c2b4b468","key":"/images/geocircles-query.png","updated_at":"2025-03-18T16:41:06.435Z"},{"checksum":"f5544571c657cb31c1a1f40bfa1ae6c082f072e0d893465af26667f7c19aef10","key":"/images/geocircles.png","updated_at":"2025-03-18T16:41:06.435Z"},{"checksum":"553c99508db5405d14c182cc9ba8e20456507591e4f9efda95e2f4897e1913ca","key":"/images/geopoints.png","updated_at":"2025-03-18T16:41:06.435Z"},{"checksum":"19aa8041378e94ee165afa4a35c7592176cc524b796dda4256b0700618063870","key":"/images/geopolygons-query.png","updated_at":"2025-03-18T16:41:06.435Z"},{"checksum":"0ade458e7b371336d9beec4b60e8a159ac9d3d0ded719e2dbb84a5077dab752a","key":"/images/geopolygons.png","updated_at":"2025-03-18T16:41:06.435Z"}],"updated_at":"2025-03-18T16:41:06.435Z"}}